// Package static GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package static

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Sonr Inc.",
            "url": "https://sonr.io",
            "email": "team@sonr.io"
        },
        "license": {
            "name": "OpenGLv3"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/access/finish/:username": {
            "post": {
                "description": "FinishAccessName finishes the authentication process and returns a PublicKeyCredentialResponse. Succesfully logging in a Sonr Account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Finish Access Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/access/start/:username": {
            "get": {
                "description": "StartAccessName accesses the user's existing credentials and returns a PublicKeyCredentialRequestOptions. Beggining the authentication process.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Start Access Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/register/finish/:username": {
            "post": {
                "description": "FinishRegisterName finishes the registration process and returns a PublicKeyCredentialResponse. Succesfully registering a WebAuthn credential to a Sonr Account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Finish Register Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/register/start/:username": {
            "get": {
                "description": "StartRegisterName starts the registration process and returns a PublicKeyCredentialCreationOptions. Initiating the registration process for a Sonr Account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Start Register Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/bucket/create": {
            "post": {
                "description": "CreateBucket creates a new bucket for a registered application via HTTP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Create Bucket",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/bucket/deactivate": {
            "post": {
                "description": "DeactivateBucket disables a bucket for a registered application via HTTP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Deactivate Bucket",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/bucket/update": {
            "post": {
                "description": "UpdateBucket updates a bucket for a registered application via HTTP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Update Bucket",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/channel/create": {
            "post": {
                "description": "CreateChannel creates a specified channel for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Create Channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/channel/deactivate": {
            "post": {
                "description": "DeactivateChannel disables a Channel for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Deactivate Channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/channel/update": {
            "post": {
                "description": "ListenChannel puts a Channel into a listening state registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Update Channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ipfs/download/:cid": {
            "get": {
                "description": "DownloadBlob downloads a file from storage given its CID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blob"
                ],
                "summary": "Download File",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ipfs/remove/:cid": {
            "post": {
                "description": "RemoveBlob deletes a file from storage given its CID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blob"
                ],
                "summary": "Remove Blob",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ipfs/upload": {
            "post": {
                "description": "UploadBlob uploads a buffer or file to IPFS and returns its CID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blob"
                ],
                "summary": "Upload Blob",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/object/create": {
            "post": {
                "description": "CreateObject creates a Object for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Object"
                ],
                "summary": "Create Object",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/object/deactivate": {
            "post": {
                "description": "DeactivateObject disables a Object for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Object"
                ],
                "summary": "Deactivate Object",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/object/update": {
            "post": {
                "description": "UpdateObject updates and object reference for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Object"
                ],
                "summary": "Update Object",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/buy/alias/app": {
            "post": {
                "description": "This method purchases an app name extension i.e. example.snr/{appname}, and inserts it into the 'alsoKnownAs' field of the app's DIDDocument. Request fails when the DIDDoc type doesnt match, wallet balance is too low, the alias has already been purchased, creator is not the owner of the app, or WhoIs is deactivated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Buy an Alias for an App",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/buy/alias/name": {
            "post": {
                "description": "This method purchases a user alias .snr domain i.e. {example}.snr, and inserts it into the 'alsoKnownAs' field of the app's DIDDocument. Request fails when the DIDDoc type doesnt match, wallet balance is too low, the alias has already been purchased, creator is not listed as controller of DIDDoc, or WhoIs is deactivated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Buy an Alias for a User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/create/whois": {
            "post": {
                "description": "This method takes a DIDDocument as an input along with the did of the account calling the TX, and verifies the signature. If succesful, and there is no existing WhoIs created for the user or application. Paramaters include: signature, diddocument, address, and whoIsType.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Create WhoIs Entry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/deactivate/whois": {
            "post": {
                "description": "This method sets the state of a particular WhoIs to be deactivated. In order to Succesfully perform this request, the TX creator and signature must be the same as the WhoIs owner.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Deactivate WhoIs Entry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/transfer/alias/app": {
            "post": {
                "description": "This method transfers an existing App Alias to the specified peer. The alias is removed from the current App's ` + "`" + `alsoKnownAs` + "`" + ` list and inserted into the new App's ` + "`" + `alsoKnownAs` + "`" + ` list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Transfer an App Alias",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/transfer/alias/name": {
            "post": {
                "description": "This method transfers an existing User .snr name Alias to the specified peer. The alias is removed from the current App's ` + "`" + `alsoKnownAs` + "`" + ` list and inserted into the new App's ` + "`" + `alsoKnownAs` + "`" + ` list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Transfer a Name alias",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/update/whois": {
            "post": {
                "description": "This method takes an updated DIDDocument as a JSON buffer along with the signature of the current tx creator, and then verifies the account calling the TX is a controller of the On-chain DIDDocument. If so, the DIDDocument is updated on the blockchain and the transaction is broadcast.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Update WhoIs Entry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v0.23.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Highway API",
	Description:      "Manage your Sonr Powered services and blockchain registered types with the Highway API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
