// Package static GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package static

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Sonr Inc.",
            "url": "https://sonr.io",
            "email": "team@sonr.io"
        },
        "license": {
            "name": "OpenGLv3"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/access/finish/:username": {
            "post": {
                "description": "FinishAccessName finishes the authentication process and returns a PublicKeyCredentialResponse. Succesfully logging in a Sonr Account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Finish Access Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/access/start/:username": {
            "get": {
                "description": "StartAccessName accesses the user's existing credentials and returns a PublicKeyCredentialRequestOptions. Beggining the authentication process.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Start Access Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/register/finish/:username": {
            "post": {
                "description": "FinishRegisterName finishes the registration process and returns a PublicKeyCredentialResponse. Succesfully registering a WebAuthn credential to a Sonr Account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Finish Register Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/register/start/:username": {
            "get": {
                "description": "StartRegisterName starts the registration process and returns a PublicKeyCredentialCreationOptions. Initiating the registration process for a Sonr Account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebAuthn"
                ],
                "summary": "Start Register Name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/bucket/create": {
            "post": {
                "description": "CreateBucket creates a new bucket for a registered application via HTTP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Create Bucket",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateBucket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateBucketResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/bucket/deactivate": {
            "post": {
                "description": "DeactivateBucket disables a bucket for a registered application via HTTP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Deactivate Bucket",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateBucket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateBucketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/bucket/update": {
            "post": {
                "description": "UpdateBucket updates a bucket for a registered application via HTTP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Update Bucket",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateBucket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateBucketResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/channel/create": {
            "post": {
                "description": "CreateChannel creates a specified channel for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Create Channel",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateChannel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateChannelResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/channel/deactivate": {
            "post": {
                "description": "DeactivateChannel disables a Channel for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Deactivate Channel",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateChannel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateChannelResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/channel/update": {
            "post": {
                "description": "ListenChannel puts a Channel into a listening state registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Update Channel",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateChannel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateChannelResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ipfs/download/:cid": {
            "get": {
                "description": "DownloadBlob downloads a file from storage given its CID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blob"
                ],
                "summary": "Download File",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ipfs/remove/:cid": {
            "post": {
                "description": "RemoveBlob deletes a file from storage given its CID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blob"
                ],
                "summary": "Remove Blob",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ipfs/upload": {
            "post": {
                "description": "UploadBlob uploads a buffer or file to IPFS and returns its CID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blob"
                ],
                "summary": "Upload Blob",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/object/create": {
            "post": {
                "description": "CreateObject creates a Object for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Object"
                ],
                "summary": "Create Object",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateObjectResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/object/deactivate": {
            "post": {
                "description": "DeactivateObject disables a Object for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Object"
                ],
                "summary": "Deactivate Object",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateObjectResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/object/update": {
            "post": {
                "description": "UpdateObject updates and object reference for a registered application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Object"
                ],
                "summary": "Update Object",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateObjectResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/buy/alias/app": {
            "post": {
                "description": "This method purchases an app name extension i.e. example.snr/{appname}, and inserts it into the 'alsoKnownAs' field of the app's DIDDocument. Request fails when the DIDDoc type doesnt match, wallet balance is too low, the alias has already been purchased, creator is not the owner of the app, or WhoIs is deactivated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Buy an Alias for an App",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgBuyNameAlias"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgBuyAppAliasResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/buy/alias/name": {
            "post": {
                "description": "This method purchases a user alias .snr domain i.e. {example}.snr, and inserts it into the 'alsoKnownAs' field of the app's DIDDocument. Request fails when the DIDDoc type doesnt match, wallet balance is too low, the alias has already been purchased, creator is not listed as controller of DIDDoc, or WhoIs is deactivated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Buy an Alias for a User",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgBuyNameAlias"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgBuyNameAliasResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/create/whois": {
            "post": {
                "description": "This method takes a DIDDocument as an input along with the did of the account calling the TX, and verifies the signature. If succesful, and there is no existing WhoIs created for the user or application. Paramaters include: signature, diddocument, address, and whoIsType.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Create WhoIs Entry",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateWhoIs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgCreateWhoIsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/deactivate/whois": {
            "post": {
                "description": "This method sets the state of a particular WhoIs to be deactivated. In order to Succesfully perform this request, the TX creator and signature must be the same as the WhoIs owner.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Deactivate WhoIs Entry",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateWhoIs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgDeactivateWhoIsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/transfer/alias/app": {
            "post": {
                "description": "This method transfers an existing App Alias to the specified peer. The alias is removed from the current App's ` + "`" + `alsoKnownAs` + "`" + ` list and inserted into the new App's ` + "`" + `alsoKnownAs` + "`" + ` list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Transfer an App Alias",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgTransferAppAlias"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgTransferAppAliasResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/transfer/alias/name": {
            "post": {
                "description": "This method transfers an existing User .snr name Alias to the specified peer. The alias is removed from the current App's ` + "`" + `alsoKnownAs` + "`" + ` list and inserted into the new App's ` + "`" + `alsoKnownAs` + "`" + ` list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Transfer a Name alias",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgTransferNameAlias"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgTransferNameAliasResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/registry/update/whois": {
            "post": {
                "description": "This method takes an updated DIDDocument as a JSON buffer along with the signature of the current tx creator, and then verifies the account calling the TX is a controller of the On-chain DIDDocument. If so, the DIDDocument is updated on the blockchain and the transaction is broadcast.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registry"
                ],
                "summary": "Update WhoIs Entry",
                "parameters": [
                    {
                        "description": "Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateWhoIs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.MsgUpdateWhoIsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.BucketDoc": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description is a human-readable description of the bucket.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the identifier of the bucket.",
                    "type": "string"
                },
                "label": {
                    "description": "Label is human-readable name of the bucket.",
                    "type": "string"
                },
                "object_dids": {
                    "description": "Objects are stored in a tree structure.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "Type is the kind of bucket for either App specific or User specific data.",
                    "type": "integer"
                }
            }
        },
        "types.ChannelDoc": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description is a human-readable description of the channel.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the identifier of the channel.",
                    "type": "string"
                },
                "label": {
                    "description": "Label is human-readable name of the channel.",
                    "type": "string"
                },
                "registered_object": {
                    "description": "RegisterdObject is the object that is registered as the payload for the channel.",
                    "$ref": "#/definitions/types.ObjectDoc"
                }
            }
        },
        "types.HowIs": {
            "type": "object",
            "properties": {
                "channel": {
                    "description": "ChannelDoc is the structure of the channel encoded as JSON",
                    "$ref": "#/definitions/types.ChannelDoc"
                },
                "creator": {
                    "description": "Document is the DID Document of the registered name and account encoded as JSON",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the DID of the channel",
                    "type": "string"
                },
                "is_active": {
                    "description": "Is Active is the status of the DID Document",
                    "type": "boolean"
                },
                "timestamp": {
                    "description": "Timestamp is the time of the last update of the DID Document",
                    "type": "integer"
                }
            }
        },
        "types.MsgBuyAppAliasResponse": {
            "type": "object",
            "properties": {
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "who_is": {
                    "description": "WhoIs is the updated WhoIs, contains the DID document and associated metadata.",
                    "$ref": "#/definitions/types.WhoIs"
                }
            }
        },
        "types.MsgBuyNameAlias": {
            "type": "object",
            "properties": {
                "creator": {
                    "description": "Creator is the wallet address of the creator of the transaction.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the alias to be bought. i.e. {alias}.snr",
                    "type": "string"
                }
            }
        },
        "types.MsgBuyNameAliasResponse": {
            "type": "object",
            "properties": {
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "who_is": {
                    "description": "WhoIs is the created WhoIs, contains the DID document and associated metadata.",
                    "$ref": "#/definitions/types.WhoIs"
                }
            }
        },
        "types.MsgCreateBucket": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "initial_object_dids": {
                    "description": "Provided initial objects for the bucket",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "types.MsgCreateBucketResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                },
                "which_is": {
                    "description": "Whichis response of the ObjectDoc",
                    "$ref": "#/definitions/types.WhichIs"
                }
            }
        },
        "types.MsgCreateChannel": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "object_to_register": {
                    "$ref": "#/definitions/types.ObjectDoc"
                }
            }
        },
        "types.MsgCreateChannelResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "how_is": {
                    "description": "HowIs of the Channel",
                    "$ref": "#/definitions/types.HowIs"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                }
            }
        },
        "types.MsgCreateObject": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "initial_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TypeField"
                    }
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "types.MsgCreateObjectResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                },
                "what_is": {
                    "description": "WhatIs of the Channel",
                    "$ref": "#/definitions/types.WhatIs"
                }
            }
        },
        "types.MsgCreateWhoIs": {
            "type": "object",
            "properties": {
                "creator": {
                    "description": "Creator is the wallet address of the creator of the transaction.",
                    "type": "string"
                },
                "did_document": {
                    "description": "DidDocument is the DID document to be stored, in JSON format (see https://w3c-ccg.github.io/did-spec/#did-json-ld).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "whois_type": {
                    "description": "WhoIsType is the type of the WhoIs to be created. Possible values are: \"USER\", \"APPLICATION\".",
                    "type": "integer"
                }
            }
        },
        "types.MsgCreateWhoIsResponse": {
            "type": "object",
            "properties": {
                "did": {
                    "description": "Did is the top level DID of the created WhoIs.",
                    "type": "string"
                },
                "who_is": {
                    "description": "WhoIs is the created WhoIs, contains the DID document and associated metadata.",
                    "$ref": "#/definitions/types.WhoIs"
                }
            }
        },
        "types.MsgDeactivateBucket": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateBucketResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateChannel": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateChannelResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateObject": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateObjectResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateWhoIs": {
            "type": "object",
            "properties": {
                "creator": {
                    "description": "Creator is the wallet address of the creator of the transaction.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                }
            }
        },
        "types.MsgDeactivateWhoIsResponse": {
            "type": "object",
            "properties": {
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "success": {
                    "description": "Success is true if the WhoIs was successfully deactivated.",
                    "type": "boolean"
                }
            }
        },
        "types.MsgTransferAppAlias": {
            "type": "object",
            "properties": {
                "alias": {
                    "description": "Alias is the name of the app alias to be transferred to the recipient.  i.e. example.snr/{name}",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount is the amount of the alias to be transferred.",
                    "type": "integer"
                },
                "creator": {
                    "description": "Creator is the wallet address of the creator of the transaction.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "recipient": {
                    "description": "Recipient is the wallet address of the recipient of the alias.",
                    "type": "string"
                }
            }
        },
        "types.MsgTransferAppAliasResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "description": "Success is true if the Alias was successfully transferred.",
                    "type": "boolean"
                },
                "who_is": {
                    "description": "WhoIs is the updated WhoIs, contains the DID document and associated metadata.",
                    "$ref": "#/definitions/types.WhoIs"
                }
            }
        },
        "types.MsgTransferNameAlias": {
            "type": "object",
            "properties": {
                "alias": {
                    "description": "Alias is the name of the user domain alias to be transferred to the recipient. i.e. {alias}.snr",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount is the amount of the alias to be transferred.",
                    "type": "integer"
                },
                "creator": {
                    "description": "Creator is the wallet address of the creator of the transaction.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "recipient": {
                    "description": "Recipient is the wallet address of the recipient of the alias.",
                    "type": "string"
                }
            }
        },
        "types.MsgTransferNameAliasResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "description": "Success is true if the Alias was successfully transferred.",
                    "type": "boolean"
                },
                "who_is": {
                    "description": "WhoIs is the updated WhoIs, contains the DID document and associated metadata.",
                    "$ref": "#/definitions/types.WhoIs"
                }
            }
        },
        "types.MsgUpdateBucket": {
            "type": "object",
            "properties": {
                "added_object_dids": {
                    "description": "Added Objects",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "description": "New bucket description",
                    "type": "string"
                },
                "label": {
                    "description": "The Bucket label",
                    "type": "string"
                },
                "removed_object_dids": {
                    "description": "Removed Objects",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.MsgUpdateBucketResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                },
                "which_is": {
                    "description": "Whichis response of the ObjectDoc",
                    "$ref": "#/definitions/types.WhichIs"
                }
            }
        },
        "types.MsgUpdateChannel": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "object_to_register": {
                    "$ref": "#/definitions/types.ObjectDoc"
                }
            }
        },
        "types.MsgUpdateChannelResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                }
            }
        },
        "types.MsgUpdateObject": {
            "type": "object",
            "properties": {
                "added_fields": {
                    "description": "Added fields to the object",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TypeField"
                    }
                },
                "cid": {
                    "description": "Contend Identifier of the object",
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "label": {
                    "description": "Label of the Object",
                    "type": "string"
                },
                "removed_fields": {
                    "description": "Removed fields from the object",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TypeField"
                    }
                }
            }
        },
        "types.MsgUpdateObjectResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the response",
                    "type": "integer"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string"
                },
                "what_is": {
                    "description": "WhatIs of the Channel",
                    "$ref": "#/definitions/types.WhatIs"
                }
            }
        },
        "types.MsgUpdateWhoIs": {
            "type": "object",
            "properties": {
                "creator": {
                    "description": "Creator is the wallet address of the creator of the transaction.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "did_document": {
                    "description": "DidDocument is the DID document to be stored, in JSON format (see https://w3c-ccg.github.io/did-spec/#did-json-ld).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.MsgUpdateWhoIsResponse": {
            "type": "object",
            "properties": {
                "did": {
                    "description": "Did is the top level DID of the WhoIs.",
                    "type": "string"
                },
                "who_is": {
                    "description": "WhoIs is the created WhoIs, contains the DID document and associated metadata.",
                    "$ref": "#/definitions/types.WhoIs"
                }
            }
        },
        "types.ObjectDoc": {
            "type": "object",
            "properties": {
                "bucket_did": {
                    "description": "Bucket is the did of the bucket that contains this object.",
                    "type": "string"
                },
                "description": {
                    "description": "Description is a human-readable description of the bucket.",
                    "type": "string"
                },
                "did": {
                    "description": "Did is the identifier of the object.",
                    "type": "string"
                },
                "fields": {
                    "description": "Fields are the fields associated with the object.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TypeField"
                    }
                },
                "label": {
                    "description": "Label is human-readable name of the bucket.",
                    "type": "string"
                }
            }
        },
        "types.TypeField": {
            "type": "object",
            "properties": {
                "kind": {
                    "description": "Type is the type of the field.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name is the name of the field.",
                    "type": "string"
                }
            }
        },
        "types.WhatIs": {
            "type": "object",
            "properties": {
                "creator": {
                    "description": "Creator is the DID of the creator",
                    "type": "string"
                },
                "did": {
                    "description": "DID is the DID of the object",
                    "type": "string"
                },
                "is_active": {
                    "description": "IsActive is the status of the DID Document",
                    "type": "boolean"
                },
                "object_doc": {
                    "description": "Object_doc is the object document",
                    "$ref": "#/definitions/types.ObjectDoc"
                },
                "timestamp": {
                    "description": "Timestamp is the time of the last update of the DID Document",
                    "type": "integer"
                }
            }
        },
        "types.WhichIs": {
            "type": "object",
            "properties": {
                "bucket": {
                    "description": "Bucket is the document of the bucket.",
                    "$ref": "#/definitions/types.BucketDoc"
                },
                "creator": {
                    "description": "Creator is the Account that created the bucket.",
                    "type": "string"
                },
                "did": {
                    "description": "DID is the DID of the bucket.",
                    "type": "string"
                },
                "is_active": {
                    "description": "IsActive is the status of the DID Document",
                    "type": "boolean"
                },
                "timestamp": {
                    "description": "Timestamp is the time of the last update of the DID Document",
                    "type": "integer"
                }
            }
        },
        "types.WhoIs": {
            "type": "object",
            "properties": {
                "alias": {
                    "description": "Alias is the list of registered ` + "`" + `alsoKnownAs` + "`" + ` identifiers of the User or Application",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controllers": {
                    "description": "Credentials are the biometric info of the registered name and account encoded with public key",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "did_document": {
                    "description": "DIDDocument is the bytes representation of DIDDocument within the WhoIs",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_active": {
                    "description": "IsActive is the status of the DID Document",
                    "type": "boolean"
                },
                "owner": {
                    "description": "Owner is the top level DID of the User or Application derived from the multisignature wallet.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp is the time of the last update of the DID Document",
                    "type": "integer"
                },
                "type": {
                    "description": "Type is the type of the registered name",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v0.23.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Highway API",
	Description:      "Manage your Sonr Powered services and blockchain registered types with the Highway API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
