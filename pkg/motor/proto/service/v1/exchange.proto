syntax = "proto3";

// Package exchange defines interfaces and types for exchange between two nodes in the network.
package sonrio.motor.service.v1;
import "common/v1/info.proto";

message MailboxMessage {
  string id = 1; // ID is the Message ID
  bytes body = 2;    // Payload is the message data
  common.v1.Peer from = 3;         // Users Peer Data
  common.v1.Peer to = 4;           // Receivers Peer Data
  bytes signature = 5;             // Signature of the Attached Data
  int64 created_at = 6; // Timestamp
}

// Invitation Message sent on RPC
message InviteRequest {
  bytes body = 1;                  // Attached Data
  bytes signature = 2;             // Signature of the Attached Data
  common.v1.Peer from = 3;         // Users Peer Data
  common.v1.Peer to = 4;           // Receivers Peer Data
}

// Reply Message sent on RPC
message InviteResponse {
  bool decision = 1;               // Success
  bytes body = 2;                  // Attached Data
  bytes signature = 3;             // Signature of the Attached Data
  common.v1.Peer from = 4;         // Users Peer Data
  common.v1.Peer to = 5;           // Receivers Peer Data

}
