name: Nightly Release Workflow

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "30 5,17 * * *"

jobs:
  ## ------------------------------------------------------------
  ## [PRE-RUN] Deletes old github actions runs
  ## ------------------------------------------------------------
  clean-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 2
          keep_minimum_runs: 4

  ## ------------------------------------------------------------
  ## [PRE-RUN] Drafts release & Bumps version
  ## ------------------------------------------------------------
  prepare-release:
    name: ‚è∞ Prepare for Release
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{steps.tag.outputs.tag}}
          name: ${{steps.tag.outputs.tag}}.nightly-${{timestamp}}
          draft: false
          prerelease: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for iOS
  ## ------------------------------------------------------------
  bind-motor-ios:
    name: üçé Bind Motor for iOS
    if: github.ref == 'refs/heads/dev'
    runs-on: macos-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace}}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor xcFramework and Upload to GitHub Release
      # ---
      - name: Build iOS XCFramework for Motor
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -i
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Android
  ## ------------------------------------------------------------
  bind-motor-android:
    name: ü§ñ Bind Motor for Android
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor AAR Library and Upload to GitHub Release
      # ---
      - name: Build Motor AAR Library
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -a
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Wasm
  ## ------------------------------------------------------------
  bind-motor-wasm:
    name: üåè Bind Motor for Web
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor JS Library and Upload to GitHub Release
      # ---
      - name: Build Motor JS Library
        run: |
          sh scripts/bind.sh -w
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ## ------------------------------------------------------------
  ## [HIGHWAY] Build and release for linux, macos
  ## ------------------------------------------------------------
  build-highway:
    name: ‚õìÔ∏è Build Highway for Linux, MacOS
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: vars
        uses: ignite-hq/cli/actions/release/vars@develop

      # ---
      # 2. Build Blockchain Daemon
      # ---
      - name: Build Blockchain Daemon
        uses: ignite-hq/cli/actions/cli@develop
        with:
          args: chain build --release --release.prefix ${{ steps.vars.outputs.tarball_prefix }} -t linux:amd64 -t darwin:amd64

      # ---
      # 3. Upload to Github Release and Send Tweet
      # ---
      - name: Publish the Release
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        run: |
          gh release upload ${{ steps.tag.outputs.tag }} release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
