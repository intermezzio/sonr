"use strict";(self.webpackChunksonr_docs=self.webpackChunksonr_docs||[]).push([[5413],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1563:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return d}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],c={title:"ADR-004 - WIP",id:"adr-004",displayed_sidebar:"resourcesSidebar"},l="ADR-004: Realtime Data Channels (WIP)",s={unversionedId:"reference/adr-004",id:"reference/adr-004",title:"ADR-004 - WIP",description:"hackmd-github-sync-badge",source:"@site/articles/reference/ADR-004.md",sourceDirName:"reference",slug:"/reference/adr-004",permalink:"/articles/reference/adr-004",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/articles/reference/ADR-004.md",tags:[],version:"current",frontMatter:{title:"ADR-004 - WIP",id:"adr-004",displayed_sidebar:"resourcesSidebar"},sidebar:"resourcesSidebar",previous:{title:"ADR-003 - WIP",permalink:"/articles/reference/adr-003"},next:{title:"ADR-005 - WIP",permalink:"/articles/reference/adr-005"}},u={},d=[{value:"Abstract",id:"abstract",level:2},{value:"Primer",id:"primer",level:2},{value:"<code>multiaddr</code>",id:"multiaddr",level:3},{value:"<code>gossip-sub</code>",id:"gossip-sub",level:3}],p={toc:d};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"adr-004-realtime-data-channels-wip"},"ADR-004: Realtime Data Channels (WIP)"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://hackmd.io/iomfscGXR1ycI_67NrLvMw"},(0,i.kt)("img",{parentName:"a",src:"https://hackmd.io/iomfscGXR1ycI_67NrLvMw/badge",alt:"hackmd-github-sync-badge"}))),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"The fundamental communication component across all Sonr nodes is the ",(0,i.kt)("inlineCode",{parentName:"p"},"channel"),". By utilizing data and transport agnostic realtime streams between nodes, we effectively have realtime structured data transmission at any point in the world."),(0,i.kt)("h2",{id:"primer"},"Primer"),(0,i.kt)("p",null,"The Sonr channel implementation requires prior knowledge of the following definitions before implementation."),(0,i.kt)("h3",{id:"multiaddr"},(0,i.kt)("inlineCode",{parentName:"h3"},"multiaddr")),(0,i.kt)("p",null,"Multiaddr's are self describing addresses that operate on any network protocol. They provide human-readable and efficient machine-readable representations. ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/multiformats/multiaddr"},"The multiaddr spec")," by protocol labs provides further details about the mechanism."),(0,i.kt)("h3",{id:"gossip-sub"},(0,i.kt)("inlineCode",{parentName:"h3"},"gossip-sub")),(0,i.kt)("p",null,"The Sonr implementation follows the standard publish/subscribe model present with the modern web, with the caveat that it operates on a peer-to-peer node."))}m.isMDXComponent=!0}}]);