basePath: /v1
definitions:
  types.Alias:
    properties:
      amount:
        description: Amount is the amount listed for purchasing the Alias from the
          User/Application
        type: integer
      is_for_sale:
        description: IsForSale is the boolean value indicating if the Alias is for
          sale
        type: boolean
      name:
        description: Name is the string name of an Alias
        type: string
    type: object
  types.BucketDoc:
    properties:
      description:
        description: Description is a human-readable description of the bucket.
        type: string
      did:
        description: Did is the identifier of the bucket.
        type: string
      label:
        description: Label is human-readable name of the bucket.
        type: string
      object_dids:
        description: Objects are stored in a tree structure.
        items:
          type: string
        type: array
      type:
        description: Type is the kind of bucket for either App specific or User specific
          data.
        type: integer
    type: object
  types.ChannelDoc:
    properties:
      description:
        description: Description is a human-readable description of the channel.
        type: string
      did:
        description: Did is the identifier of the channel.
        type: string
      label:
        description: Label is human-readable name of the channel.
        type: string
      registered_object:
        $ref: '#/definitions/types.ObjectDoc'
        description: RegisterdObject is the object that is registered as the payload
          for the channel.
    type: object
  types.DIDDocument:
    properties:
      also_known_as:
        items:
          type: string
        type: array
      assertion_method:
        items:
          type: string
        type: array
      authentication:
        items:
          type: string
        type: array
      capability_delegation:
        items:
          type: string
        type: array
      capability_invocation:
        items:
          type: string
        type: array
      context:
        items:
          type: string
        type: array
      controller:
        items:
          type: string
        type: array
      id:
        type: string
      key_agreement:
        items:
          type: string
        type: array
      service:
        items:
          $ref: '#/definitions/types.Service'
        type: array
      verification_method:
        items:
          $ref: '#/definitions/types.VerificationMethod'
        type: array
    type: object
  types.HowIs:
    properties:
      channel:
        $ref: '#/definitions/types.ChannelDoc'
        description: ChannelDoc is the structure of the channel encoded as JSON
      creator:
        description: Document is the DID Document of the registered name and account
          encoded as JSON
        type: string
      did:
        description: Did is the DID of the channel
        type: string
      is_active:
        description: Is Active is the status of the DID Document
        type: boolean
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
    type: object
  types.KeyValuePair:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  types.MsgBuyAlias:
    properties:
      creator:
        description: Creator is the wallet address of the creator of the transaction.
        type: string
      name:
        description: Name is the name of the alias app extension to be bought. i.e.
          example.snr/{name}
        type: string
    type: object
  types.MsgBuyAliasResponse:
    properties:
      success:
        description: Did is the top level DID of the WhoIs.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the updated WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.MsgCreateBucket:
    properties:
      creator:
        type: string
      description:
        type: string
      initial_object_dids:
        description: Provided initial objects for the bucket
        items:
          type: string
        type: array
      kind:
        type: string
      label:
        type: string
    type: object
  types.MsgCreateBucketResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
      which_is:
        $ref: '#/definitions/types.WhichIs'
        description: Whichis response of the ObjectDoc
    type: object
  types.MsgCreateChannel:
    properties:
      creator:
        type: string
      description:
        type: string
      label:
        type: string
      object_to_register:
        $ref: '#/definitions/types.ObjectDoc'
    type: object
  types.MsgCreateChannelResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      how_is:
        $ref: '#/definitions/types.HowIs'
        description: HowIs of the Channel
      message:
        description: Message of the response
        type: string
    type: object
  types.MsgCreateObject:
    properties:
      creator:
        type: string
      description:
        type: string
      initial_fields:
        items:
          $ref: '#/definitions/types.TypeField'
        type: array
      label:
        type: string
    type: object
  types.MsgCreateObjectResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
      what_is:
        $ref: '#/definitions/types.WhatIs'
        description: WhatIs of the Channel
    type: object
  types.MsgCreateWhoIs:
    properties:
      creator:
        description: Creator is the wallet address of the creator of the transaction.
        type: string
      did_document:
        description: DidDocument is the DID document to be stored, in JSON format
          (see https://w3c-ccg.github.io/did-spec/#did-json-ld).
        items:
          type: integer
        type: array
      whois_type:
        description: 'WhoIsType is the type of the WhoIs to be created. Possible values
          are: "USER", "APPLICATION".'
        type: integer
    type: object
  types.MsgCreateWhoIsResponse:
    properties:
      success:
        description: Did is the top level DID of the created WhoIs.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the created WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.MsgDeactivateBucket:
    properties:
      creator:
        type: string
      did:
        type: string
    type: object
  types.MsgDeactivateBucketResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
    type: object
  types.MsgDeactivateChannel:
    properties:
      creator:
        type: string
      did:
        type: string
    type: object
  types.MsgDeactivateChannelResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
    type: object
  types.MsgDeactivateObject:
    properties:
      creator:
        type: string
      did:
        type: string
    type: object
  types.MsgDeactivateObjectResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
    type: object
  types.MsgDeactivateWhoIs:
    properties:
      creator:
        description: Creator is the wallet address of the creator of the transaction.
        type: string
    type: object
  types.MsgDeactivateWhoIsResponse:
    properties:
      did:
        description: Did is the top level DID of the WhoIs.
        type: string
      success:
        description: Success is true if the WhoIs was successfully deactivated.
        type: boolean
    type: object
  types.MsgSellAlias:
    properties:
      alias:
        description: Alias is the name of the app alias to be transferred to the recipient.  i.e.
          example.snr/{name}
        type: string
      amount:
        description: Amount is the amount of the alias to be transferred.
        type: integer
      creator:
        description: Creator is the wallet address of the creator of the transaction.
        type: string
    type: object
  types.MsgSellAliasResponse:
    properties:
      success:
        description: Success is true if the Alias was successfully transferred.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the updated WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.MsgTransferAlias:
    properties:
      alias:
        description: Alias is the name of the user domain alias to be transferred
          to the recipient. i.e. {alias}.snr
        type: string
      amount:
        description: Amount is the amount of the alias to be transferred.
        type: integer
      creator:
        description: Creator is the wallet address of the creator of the transaction.
        type: string
      recipient:
        description: Recipient is the wallet address of the recipient of the alias.
        type: string
    type: object
  types.MsgTransferAliasResponse:
    properties:
      success:
        description: Success is true if the Alias was successfully transferred.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the updated WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.MsgUpdateBucket:
    properties:
      added_object_dids:
        description: Added Objects
        items:
          type: string
        type: array
      creator:
        type: string
      description:
        description: New bucket description
        type: string
      label:
        description: The Bucket label
        type: string
      removed_object_dids:
        description: Removed Objects
        items:
          type: string
        type: array
    type: object
  types.MsgUpdateBucketResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
      which_is:
        $ref: '#/definitions/types.WhichIs'
        description: Whichis response of the ObjectDoc
    type: object
  types.MsgUpdateChannel:
    properties:
      creator:
        type: string
      description:
        type: string
      did:
        type: string
      label:
        type: string
      object_to_register:
        $ref: '#/definitions/types.ObjectDoc'
    type: object
  types.MsgUpdateChannelResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
    type: object
  types.MsgUpdateObject:
    properties:
      added_fields:
        description: Added fields to the object
        items:
          $ref: '#/definitions/types.TypeField'
        type: array
      cid:
        description: Contend Identifier of the object
        type: string
      creator:
        type: string
      label:
        description: Label of the Object
        type: string
      removed_fields:
        description: Removed fields from the object
        items:
          $ref: '#/definitions/types.TypeField'
        type: array
    type: object
  types.MsgUpdateObjectResponse:
    properties:
      code:
        description: Code of the response
        type: integer
      message:
        description: Message of the response
        type: string
      what_is:
        $ref: '#/definitions/types.WhatIs'
        description: WhatIs of the Channel
    type: object
  types.MsgUpdateWhoIs:
    properties:
      creator:
        description: Creator is the wallet address of the creator of the transaction.
        type: string
      did_document:
        description: DidDocument is the DID document to be stored, in JSON format
          (see https://w3c-ccg.github.io/did-spec/#did-json-ld).
        items:
          type: integer
        type: array
    type: object
  types.MsgUpdateWhoIsResponse:
    properties:
      success:
        description: Did is the top level DID of the WhoIs.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the created WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.ObjectDoc:
    properties:
      bucket_did:
        description: Bucket is the did of the bucket that contains this object.
        type: string
      description:
        description: Description is a human-readable description of the bucket.
        type: string
      did:
        description: Did is the identifier of the object.
        type: string
      fields:
        description: Fields are the fields associated with the object.
        items:
          $ref: '#/definitions/types.TypeField'
        type: array
      label:
        description: Label is human-readable name of the bucket.
        type: string
    type: object
  types.Service:
    properties:
      id:
        type: string
      service_endpoint:
        type: string
      type:
        type: string
    type: object
  types.TypeField:
    properties:
      kind:
        description: Type is the type of the field.
        type: integer
      name:
        description: Name is the name of the field.
        type: string
    type: object
  types.VerificationMethod:
    properties:
      controller:
        type: string
      id:
        type: string
      public_key_base58:
        type: string
      public_key_jwk:
        items:
          $ref: '#/definitions/types.KeyValuePair'
        type: array
      type:
        type: string
    type: object
  types.WhatIs:
    properties:
      creator:
        description: Creator is the DID of the creator
        type: string
      did:
        description: DID is the DID of the object
        type: string
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      object_doc:
        $ref: '#/definitions/types.ObjectDoc'
        description: Object_doc is the object document
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
    type: object
  types.WhichIs:
    properties:
      bucket:
        $ref: '#/definitions/types.BucketDoc'
        description: Bucket is the document of the bucket.
      creator:
        description: Creator is the Account that created the bucket.
        type: string
      did:
        description: DID is the DID of the bucket.
        type: string
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
    type: object
  types.WhoIs:
    properties:
      alias:
        description: Alias is the list of registered `alsoKnownAs` identifiers of
          the User or Application
        items:
          $ref: '#/definitions/types.Alias'
        type: array
      controllers:
        description: Credentials are the biometric info of the registered name and
          account encoded with public key
        items:
          type: string
        type: array
      did_document:
        $ref: '#/definitions/types.DIDDocument'
        description: DIDDocument is the bytes representation of DIDDocument within
          the WhoIs. Initially marshalled as JSON.
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      owner:
        description: Owner is the top level DID of the User or Application derived
          from the multisignature wallet.
        type: string
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
      type:
        description: 'Type is the kind of the entity. Possible values are: "user",
          "application"'
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: team@sonr.io
    name: Sonr Inc.
    url: https://sonr.io
  description: Manage your Sonr Powered services and blockchain registered types with
    the Highway API.
  license:
    name: OpenGLv3
  title: Highway API
  version: v0.23.0
paths:
  /v1/bucket/create:
    post:
      description: CreateBucket creates a new bucket for a registered application
        via HTTP.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgCreateBucket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgCreateBucketResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create Bucket
      tags:
      - Bucket
  /v1/bucket/deactivate:
    post:
      description: DeactivateBucket disables a bucket for a registered application
        via HTTP.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgDeactivateBucket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgDeactivateBucketResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "502":
          description: Bad Gateway
          schema:
            type: string
      summary: Deactivate Bucket
      tags:
      - Bucket
  /v1/bucket/update:
    post:
      description: UpdateBucket updates a bucket for a registered application via
        HTTP.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgUpdateBucket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgUpdateBucketResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update Bucket
      tags:
      - Bucket
  /v1/channel/create:
    post:
      description: CreateChannel creates a specified channel for a registered application
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgCreateChannel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgCreateChannelResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create Channel
      tags:
      - Channel
  /v1/channel/deactivate:
    post:
      description: DeactivateChannel disables a Channel for a registered application
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgDeactivateChannel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgDeactivateChannelResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Deactivate Channel
      tags:
      - Channel
  /v1/channel/update:
    post:
      description: ListenChannel puts a Channel into a listening state registered
        application
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgUpdateChannel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgUpdateChannelResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update Channel
      tags:
      - Channel
  /v1/ipfs/download/:cid:
    get:
      description: DownloadBlob downloads a file from storage given its CID.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Download File
      tags:
      - Blob
  /v1/ipfs/remove/:cid:
    post:
      description: UnpinBlob deletes a file from storage given its CID.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Unpin Blob
      tags:
      - Blob
  /v1/ipfs/upload:
    post:
      description: UploadBlob uploads a buffer or file to IPFS and returns its CID.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Upload Blob
      tags:
      - Blob
  /v1/object/create:
    post:
      description: CreateObject creates a Object for a registered application
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgCreateObject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgCreateObjectResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create Object
      tags:
      - Object
  /v1/object/deactivate:
    post:
      description: DeactivateObject disables a Object for a registered application
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgDeactivateObject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgDeactivateObjectResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Deactivate Object
      tags:
      - Object
  /v1/object/update:
    post:
      description: UpdateObject updates and object reference for a registered application
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgUpdateObject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgUpdateObjectResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update Object
      tags:
      - Object
  /v1/registry/buy/alias/app:
    post:
      description: This method Sets a particular owned alias by a User or Application
        to `true` for the IsForSale property. It also takes the amount parameter in
        order to define how much the user owned alias is for sale.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgSellAlias'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgSellAliasResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Sell an Alias
      tags:
      - Registry
  /v1/registry/buy/alias/name:
    post:
      description: This method purchases a user alias .snr domain i.e. {example}.snr
        or application alias extension i.e. example.snr/{appName}, and inserts it
        into the 'alsoKnownAs' field of the app's DIDDocument. Request fails when
        the DIDDoc type doesnt match, wallet balance is too low, the alias has already
        been purchased, creator is not listed as controller of DIDDoc, or WhoIs is
        deactivated.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgBuyAlias'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgBuyAliasResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Buy an Alias for a User
      tags:
      - Registry
  /v1/registry/create/whois:
    post:
      description: 'This method takes a DIDDocument as an input along with the did
        of the account calling the TX, and verifies the signature. If succesful, and
        there is no existing WhoIs created for the user or application. Paramaters
        include: signature, diddocument, address, and whoIsType.'
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgCreateWhoIs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgCreateWhoIsResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create WhoIs Entry
      tags:
      - Registry
  /v1/registry/deactivate/whois:
    post:
      description: This method sets the state of a particular WhoIs to be deactivated.
        In order to Succesfully perform this request, the TX creator and signature
        must be the same as the WhoIs owner.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgDeactivateWhoIs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgDeactivateWhoIsResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Deactivate WhoIs Entry
      tags:
      - Registry
  /v1/registry/transfer/alias/name:
    post:
      description: This method transfers an existing User .snr name or Application
        extension name Alias to the specified peer DIDDocument. The alias is removed
        from the current App or User's `alsoKnownAs` list and inserted into the new
        DIDDocument's `alsoKnownAs` list.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgTransferAlias'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgTransferAliasResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Transfer an alias
      tags:
      - Registry
  /v1/registry/update/whois:
    post:
      description: This method takes an updated DIDDocument as a JSON buffer along
        with the signature of the current tx creator, and then verifies the account
        calling the TX is a controller of the On-chain DIDDocument. If so, the DIDDocument
        is updated on the blockchain and the transaction is broadcast.
      parameters:
      - description: Parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MsgUpdateWhoIs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgUpdateWhoIsResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update WhoIs Entry
      tags:
      - Registry
swagger: "2.0"
